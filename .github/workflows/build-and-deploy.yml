name: Serverless Build and Deploy

on:
  push:
    branches: [f1, f2, f3, f4, f5, f6, f7, dev]
  #workflow_dispatch: {}

jobs:
  deploy:
    name: Deploy ${{ matrix.serverless }}
    runs-on: ubuntu-latest
    if: contains(github.ref, 'refs/heads/f') || github.ref == 'refs/heads/dev'

    strategy:
      matrix:
        serverless: [part1, part2, part3]
      max-parallel: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          if [ ! -f package.json ]; then
            cat > package.json << 'EOF'
          {
            "name": "ibs-multi-service-app",
            "version": "1.0.0",
            "description": "Multi-part serverless application",
            "dependencies": {
              "pg": "^8.11.3",
              "aws-sdk": "^2.1494.0"
            },
            "devDependencies": {
              "serverless": "^3.35.0"
            }
          }
          EOF
          fi
          npm install --no-package-lock pg@^8.11.3 aws-sdk@^2.1494.0
          npm install --no-package-lock -g serverless@3.35.0
          echo '{"name": "ibs-app", "version": "1.0.0", "lockfileVersion": 3}' > package-lock.json

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Compute Stage from Branch
        run: |
          branch="${GITHUB_REF#refs/heads/}"
          echo "Branch is: $branch"
          if [ "$branch" = "dev" ]; then
            echo "STAGE=develop" >> "$GITHUB_ENV"
          elif [[ "$branch" =~ ^f[0-9]+$ ]]; then
            echo "STAGE=feature${branch#f}" >> "$GITHUB_ENV"
          else
            echo "STAGE=$branch" >> "$GITHUB_ENV"
          fi
          echo "Using stage: $STAGE"

      - name: Deploy Part ${{ matrix.serverless }}
        run: |
          if [ "${{ matrix.serverless }}" = "part2" ]; then
            sls deploy --stage "$STAGE-$GITHUB_RUN_ID" --verbose -c "serverless-part2.yml"
          else
            sls deploy --stage "$STAGE" --verbose -c "serverless-${{ matrix.serverless }}.yml"
          fi
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}